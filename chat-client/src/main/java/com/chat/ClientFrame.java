/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.chat;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.awt.FlowLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JTextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
/**
 *
 * 
 */
public class ClientFrame extends javax.swing.JFrame {
    /**
     * Creates new form ClientFrame
     */
    
    int curSize = 0;
    StringBuilder htmlStringBuilder;
    static Boolean exit = false;

    private class GuiThread extends Thread{
        public GuiThread() {
            
        }
        @Override
        public void run() {
            htmlStringBuilder = new StringBuilder();
            while(true) {
                if(exit) {
                    dispose();
                }
                try {
                    GuiThread.sleep(100);
                } catch (InterruptedException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
                if(curSize != ChatControlThread.cronologia.size()) {
                    if(ChatControlThread.cronologia.get(curSize).getSender().equals(App.userName)) {
                        htmlStringBuilder.append("<b>You </b> ").append(ChatControlThread.cronologia.get(curSize).getBody()).append("<br>");
                    } else if(ChatControlThread.cronologia.get(curSize).getType().equals("tx1")) {
                        htmlStringBuilder.append("<b>").append(ChatControlThread.cronologia.get(curSize).getSender()).append(" whispers to you</b> ").append(ChatControlThread.cronologia.get(curSize).getBody()).append("<br>");
                    } else if(ChatControlThread.cronologia.get(curSize).getType().equals("tx2")) {
                        htmlStringBuilder.append(ChatControlThread.cronologia.get(curSize).getBody()).append("<br>");
                    } else {
                        htmlStringBuilder.append("<b>").append(ChatControlThread.cronologia.get(curSize).getSender()).append(" </b> ").append(ChatControlThread.cronologia.get(curSize).getBody()).append("<br>");
                    }
                    System.out.println(htmlStringBuilder.toString());
                    jTextPane1.setText(htmlStringBuilder.toString());
                    curSize = ChatControlThread.cronologia.size();
                }
            }
        }
    }
    
    public ClientFrame() {
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        jTextPane1.setContentType("text/html");
        GuiThread guiThrd = new GuiThread();
        guiThrd.start();
        
        final JDialog jd = new JDialog(this);
        jd.setLayout(new FlowLayout());
        jd.setSize(400, 200);
        jd.setLocationRelativeTo(null);
        jd.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        jd.setResizable(false);
        JLabel usernameLabel = new JLabel("Insert your username to continue:");
        final JTextField usernameField = new JTextField(30);
        JButton usernameButton = new JButton("Send");
        usernameButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(!usernameField.getText().isEmpty()) {
                    App.userName = usernameField.getText();
                    App.pr.println(App.userName);
                    label1.setText(label1.getText() + App.userName);
                    jd.setVisible(false);
                }
            }
        });
        jd.add(usernameLabel);
        jd.add(usernameField);
        jd.add(usernameButton);
        jd.setVisible(true);
    }

    
    static void updateChat() {
        
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        jButton1 = new javax.swing.JButton();
        label2 = new java.awt.Label();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 51));
        setResizable(false);

        label1.setPreferredSize(new java.awt.Dimension(50, 30));
        label1.setText("Java Chat User: ");

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        label2.setText("Try sending /help to recieve command list");

        jTextField1.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jTextField1.setText("");

        jTextPane1.setEditable(false);
        jTextPane1.setFocusable(false);
        jTextPane1.setRequestFocusEnabled(false);
        jScrollPane2.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jTextField1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ObjectMapper mapper = new ObjectMapper();
        String inputString = jTextField1.getText();
        if(inputString.equals("/exit")) {
           App.loop = false;
        }
       
        // crea messaggio e serializza
        Message messageToSend = new Message(App.userName, inputString);
        ChatControlThread.cronologia.add(messageToSend);
        String messageJSON;
        // invio messaggio
        try {
            messageJSON = mapper.writeValueAsString(messageToSend);
            App.pr.println(messageJSON);
            
        } catch (JsonProcessingException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        updateChat();
        jTextField1.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    // End of variables declaration//GEN-END:variables
}
